{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class OnlyNumber {\n  constructor(el) {\n    this.el = el;\n    this.regEx = new RegExp('^[0-9]*$');\n    this.OnlyNumber = true;\n    this.maxlength = 20;\n  }\n  onKeyDown(event) {\n    let e = event;\n    if (this.OnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 || e.keyCode == 65 && e.ctrlKey === true || e.keyCode == 67 && e.ctrlKey === true || e.keyCode == 86 && e.ctrlKey === true || e.keyCode == 88 && e.ctrlKey === true || e.keyCode >= 35 && e.keyCode <= 39) {\n        return;\n      }\n      if (!this.isValid(event.key)) e.preventDefault();\n    }\n  }\n  isValid(elegible) {\n    const current = this.el.nativeElement.value;\n    const next = current.concat(elegible);\n    return this.regEx.test(elegible) && !this.isOverSize(next);\n  }\n  isOverSize(str) {\n    if (this.maxlength && str) {\n      console.log(`${str.length} - ${this.maxlength}`);\n      return str.length > this.maxlength;\n    }\n    return false;\n  }\n  static #_ = this.ɵfac = function OnlyNumber_Factory(t) {\n    return new (t || OnlyNumber)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: OnlyNumber,\n    selectors: [[\"\", \"OnlyNumber\", \"\"]],\n    hostBindings: function OnlyNumber_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function OnlyNumber_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    },\n    inputs: {\n      OnlyNumber: \"OnlyNumber\",\n      maxlength: \"maxlength\"\n    }\n  });\n}","map":{"version":3,"names":["OnlyNumber","constructor","el","regEx","RegExp","maxlength","onKeyDown","event","e","indexOf","keyCode","ctrlKey","isValid","key","preventDefault","elegible","current","nativeElement","value","next","concat","test","isOverSize","str","console","log","length","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","hostBindings","OnlyNumber_HostBindings","rf","ctx","ɵɵlistener","OnlyNumber_keydown_HostBindingHandler","$event"],"sources":["/Users/danamas/project-nando/chuyu/src/app/directives/only-number.directive.ts"],"sourcesContent":["\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[OnlyNumber]'\n})\n\nexport class OnlyNumber {\n  private readonly regEx = new RegExp('^[0-9]*$');\n\n  constructor(private el: ElementRef) { }\n\n  @Input() OnlyNumber: boolean = true;\n  @Input() maxlength: number = 20;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\n    let e = <KeyboardEvent> event;\n    if (this.OnlyNumber) {\n        if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        (e.keyCode == 65 && e.ctrlKey === true) ||\n        (e.keyCode == 67 && e.ctrlKey === true) ||\n        (e.keyCode == 86 && e.ctrlKey === true) ||\n        (e.keyCode == 88 && e.ctrlKey === true) ||\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n          return;\n        }\n\n      if (!this.isValid(event.key))\n         e.preventDefault();\n      \n      }\n  }\n\n  private isValid(elegible: string): boolean {\n    const current: string = this.el.nativeElement.value;\n    const next: string = current.concat(elegible);\n    return this.regEx.test(elegible) && !this.isOverSize(next);\n  }\n\n  private isOverSize(str: string): boolean {\n    if (this.maxlength && str) {\n      console.log(`${str.length} - ${this.maxlength}`)\n      return str.length > this.maxlength; \n    }\n    return false;\n  }\n\n}"],"mappings":";AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,EAAc;IAAd,KAAAA,EAAE,GAAFA,EAAE;IAFL,KAAAC,KAAK,GAAG,IAAIC,MAAM,CAAC,UAAU,CAAC;IAItC,KAAAJ,UAAU,GAAY,IAAI;IAC1B,KAAAK,SAAS,GAAW,EAAE;EAHO;EAKDC,SAASA,CAACC,KAAK;IAClD,IAAIC,CAAC,GAAmBD,KAAK;IAC7B,IAAI,IAAI,CAACP,UAAU,EAAE;MACjB,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAACS,OAAO,CAACD,CAAC,CAACE,OAAO,CAAC,KAAK,CAAC,CAAC,IACzDF,CAAC,CAACE,OAAO,IAAI,EAAE,IAAIF,CAAC,CAACG,OAAO,KAAK,IAAK,IACtCH,CAAC,CAACE,OAAO,IAAI,EAAE,IAAIF,CAAC,CAACG,OAAO,KAAK,IAAK,IACtCH,CAAC,CAACE,OAAO,IAAI,EAAE,IAAIF,CAAC,CAACG,OAAO,KAAK,IAAK,IACtCH,CAAC,CAACE,OAAO,IAAI,EAAE,IAAIF,CAAC,CAACG,OAAO,KAAK,IAAK,IACtCH,CAAC,CAACE,OAAO,IAAI,EAAE,IAAIF,CAAC,CAACE,OAAO,IAAI,EAAG,EAAE;QACpC;MACF;MAEF,IAAI,CAAC,IAAI,CAACE,OAAO,CAACL,KAAK,CAACM,GAAG,CAAC,EACzBL,CAAC,CAACM,cAAc,EAAE;IAErB;EACJ;EAEQF,OAAOA,CAACG,QAAgB;IAC9B,MAAMC,OAAO,GAAW,IAAI,CAACd,EAAE,CAACe,aAAa,CAACC,KAAK;IACnD,MAAMC,IAAI,GAAWH,OAAO,CAACI,MAAM,CAACL,QAAQ,CAAC;IAC7C,OAAO,IAAI,CAACZ,KAAK,CAACkB,IAAI,CAACN,QAAQ,CAAC,IAAI,CAAC,IAAI,CAACO,UAAU,CAACH,IAAI,CAAC;EAC5D;EAEQG,UAAUA,CAACC,GAAW;IAC5B,IAAI,IAAI,CAAClB,SAAS,IAAIkB,GAAG,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,GAAGF,GAAG,CAACG,MAAM,MAAM,IAAI,CAACrB,SAAS,EAAE,CAAC;MAChD,OAAOkB,GAAG,CAACG,MAAM,GAAG,IAAI,CAACrB,SAAS;IACpC;IACA,OAAO,KAAK;EACd;EAAC,QAAAsB,CAAA,G;qBAtCU3B,UAAU,EAAA4B,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAV/B,UAAU;IAAAgC,SAAA;IAAAC,YAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAVP,EAAA,CAAAS,UAAA,qBAAAC,sCAAAC,MAAA;UAAA,OAAAH,GAAA,CAAA9B,SAAA,CAAAiC,MAAA,CACT;QAAA,EADmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}